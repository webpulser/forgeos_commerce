.inner-content
  .product-list
    = step_order(1)
  .cart-step-content
    - unless current_cart.is_empty?
      /= display_cart(current_cart)
      - if current_cart.is_empty?
        Il n'y a aucun produit dans votre panier !
      - else
        %table.products_in_cart
          %thead
            %tr
              %th= t('product.name')
              %th= t(:unit_price)
              %th= t(:quantity, :count => 1)
              %th= t(:total)
          %tbody
            -current_cart.carts_products.group_by(&:product_id).each do |cart_product|
            -product = cart_product[1].first.product
            -nb = cart_product[1].size
              %tr
                %td=product.name
                %td
                  = number_with_precision(product.price,2)
                  = current_currency.html
                %td=nb
                %td
                  = number_with_precision(nb*product.price,2)
                  = current_currency.html
      .total-div
        -current_cart.carts_products.each do |carts_product|
          -unless carts_product.product.special_offer_discount.nil?
            %span.total-label
              ="Promo #{carts_product.product.name} #{carts_product.product.special_offer_discount}"
            %span.total-price
              = number_with_precision(carts_product.product.new_price,2)
              = current_currency.html

        -@free_product_ids.each do |product_id|
          -product = Product.find_by_id(product_id)
          %span.total-label
            ="Free product : #{product.name}"
          %span.total-price
            Free
        - if current_cart.special_offer_discount
          %span.total-label
            Offre spÃ©cial
          %span.total-price
            = current_cart.special_offer_discount
        %span.total-label.last
          Prix total
        %span.total-price.last#cart_total
          = number_with_precision(current_cart.total,2)
          = current_currency.html
      .clear
      #voucher_message
        - if current_cart.voucher
          -voucher = VoucherRule.find_by_id(current_cart.voucher)
          = "With voucher code #{voucher.code} : #{voucher.name}" unless voucher.nil?
      = display_voucher
      .link_order
        = link_to t(:make_order).capitalize, :controller => 'order', :action => 'new'
        = link_to t(:continue_in_shop), :back
      .clear
      .link_empty
        = "or" + link_to_cart_empty
      .clear
  .clear
  - unless @cross_selling_products.empty?
    .cross-selling
      %h2
        = t(:cross_products)
        \:
      %ul.cross-sells
        -@cross_selling_products.each do |product|
          %li
            - link_to product.public_url do
              - picture = product.pictures.first
              - if picture
                = image_tag(picture.public_filename(:normal))
              - else
                %img{ :src => "/images/front_demo/product_image.jpg", :alt => "image produit" }
              %span= truncate(product.name,15,' ...')
              %span.price= "#{product.price} #{current_currency.html}"
- content_for :title, t(:cart, :count => 1)
