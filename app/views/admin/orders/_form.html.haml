- form_for [:admin, order], :html => { :id => 'wrap', :class => 'edit_order' } do |f|
  .backgrounds.big-header
    %span.order-price= number_with_precision order.total, :precision => 2
    %span.order-currency= current_currency.html
    %span.header-separator
    %span
      = t('order',:count =>1).capitalize
      nÂ°
      = order.reference
    %span.header-separator
    - unless order.created_at.nil?
      %span= @order.created_at.to_s(:format => :default)
    = Forgeos_save_buttons admin_orders_path

  #content.grid_16.alpha.omega
    #order-see.grid_12.alpha
      .order-see-wrap
        - if order.new_record?
          .fieldset
            %h3= t('order.main_infos')
            .main-infos
              - user = order.user
              .main-infos-cutomer
                %h4.small-icons= t('user', :count => 1).capitalize
                = f.select :user_id, User.all(:order => 'firstname ASC, lastname ASC').collect {|u| [u.fullname, u.id]}, {:prompt => t('please_select')}
            .clear
          .clear
        - else
          .fieldset
            %h3= t('order.main_infos')
            .main-infos
              .main-infos-cutomer
                %h4.small-icons= t('user', :count => 1).capitalize
                - user = order.user
                = link_to user.fullname, [:admin, user]
                %p= "#{user.orders.count} #{t('order', :count => user.orders.count)} #{t('since')} #{user.orders.first.created_at.to_date.to_s(:long)}"
                %p= user.phone
                %p.customer-email= user.email
              .main-info-separation
              /
                .main-infos-payment
                  %h4.small-icons
                    Payment method
                  %p
                    Credit card Mastercard
                  %p
                    6565-9878-XXXX
                  %p.payment-checked
                    payment checked
                .main-info-separation
              .main-infos-note
                %h4.small-icons= t('order.user_note').capitalize
                =# order.user_note
            .clear
          .clear

        %table.datatable
          %thead
            %tr
              %th &nbsp;
              %th.product-th= t('product', :count => 1).capitalize
              %th= t('sku').capitalize
              %th= t('price', :count => 1).capitalize
              %th= t('quantity', :count => 1).capitalize
              %th= t('order.total').capitalize
              -#%th.actions &nbsp;
          %tbody
            - child_index = 0
            - f.fields_for :order_details do |detail_form|
              %tr
                - detail = detail_form.object
                - product = detail.product
                %td
                  - if product && picture = product.pictures.first
                    = image_tag(picture.public_filename(:thumb))
                  - else
                    = image_tag('admin/no-image.png')
                %td
                  - if product
                    = link_to detail.name, [:admin, detail.product]
                  - else
                    = detail.name
                %td= detail.sku
                %td= price_with_currency detail.price
                %td= detail.quantity
                %td= price_with_currency detail.total
                -#%td=# link_to_function '', "remove_order_detail($(this));", :class => 'small-icons destroy-link', :id => "order_detail_#{child_index}"
                -# content_for :deleted_details, detail_form.hidden_field(:_destroy, :class => 'delete')
                -# child_index +=1
        =# link_to t('order.product.add').capitalize, '#', :class => 'small-icons add-link add-order-detail'
        #order_details= yield(:deleted_details)
        = hidden_field_tag "transporter[rebuild]", 0
        .order-totals
          .order-subtotal= t('order.subtotal').capitalize
          %span.order-subtotal= number_with_precision order.total(:tax => false, :with_shipping => false, :with_special_offer => false, :with_shipping => false), :precision => 2
          %span.order-subtotal-currency= current_currency.html
          - if order.order_shipping
            %div= t('shipping').capitalize
            %span.order_shipping
              = content_tag(:span, number_with_precision(order.order_shipping.price, :precision => 2), :class => 'order_shipping_price')
              = " #{current_currency.html}"
        .order-totals
          %div= t('special_offer', :count => 2).capitalize
          %br
          - if order.special_offer_discount
            %div= t('order.total_discount').capitalize
            %span= "- #{price_with_currency order.special_offer_discount}"
            %br
          - order.special_offer_discount_products.each do |product|
            %div{:class => "special_order_detail_#{product.id}"}= "#{product.name}"
            %span{:class => "special_order_detail_#{product.id}"}= "- #{price_with_currency product.special_offer_discount_price}"
          %div= t('voucher', :count => 1).capitalize
          %br
          - if order.voucher_discount
            %div= t('order.total_discount').capitalize
            %span= "- #{price_with_currency order.voucher_discount}"
            %br
          - order.voucher_discount_products.each do |product|
            %div{:class => "voucher_order_detail_#{product.id}"}= "#{product.name}"
            %span{:class => "voucher_order_detail_#{product.id}"}= "- #{price_with_currency product.voucher_discount_price}"
            %br

          /%div.change-voucher
          /  = select_tag :voucher, options_for_select(Voucher.all.collect{ |voucher| [voucher.name, voucher.value] }.unshift([t('voucher.change').capitalize, nil])), :class => 'select-voucher'
          /= f.hidden_field :voucher
          %span

          -# order.special_offers.each do |offer|
            %div= offer.name
            %span= "-#{offer.total} #{current_currency.html}"
        -#.order-totals
          %div= t('tax', :count => 2).capitalize
          %span.order-taxes= order.taxes
          %span= current_currency.html
        .order-totals.total-block
          .order-total= t('order.total').capitalize
          %span.order-total= number_with_precision order.total, :precision => 2
          %span.order-currency= current_currency.html

        .fieldset.open
          - order.build_address_delivery if order.address_delivery.nil?
          - f.fields_for :address_delivery do |delivery_address_form|
            = link_to t('address.delivery', :count => 1).capitalize, '#', :class => "small-icons panel"
            = render :partial => 'address_form', :locals => {:form => delivery_address_form, :civilities => civilities, :countries => countries}
        .fieldset.closed
          - order.build_address_invoice if order.address_invoice.nil?
          - f.fields_for :address_invoice do |invoice_address_form|
            = link_to t('address.invoice', :count => 1).capitalize, "#", :class => "small-icons panel"
            = render :partial => 'address_form', :locals => {:form => invoice_address_form, :civilities => civilities, :countries => countries}

        .fieldset.open
          - order.build_order_shipping if order.order_shipping.nil?
          - f.fields_for :order_shipping do |order_shipping_form|
            = link_to t('delivery').capitalize, '#', :class => "small-icons panel"
            .option-panel-content
              .delivery-method
                = select_tag :order_shipping, options_for_select([[t(:please_select),0]]+@available_transporters.collect{ |transporter| [ transporter.name, transporter.variables ]}), :class => 'select-order-shipping' unless @available_transporters.nil?
                .clear

              .name-input
                = order_shipping_form.label :name, t('name').capitalize
                %span.order_shipping_name= order.order_shipping.name
                = order_shipping_form.hidden_field :name
              .price-input
                = order_shipping_form.label :price, t('price', :count => 1).capitalize
                %span
                  = content_tag(:span, number_with_precision(order.order_shipping.price, :precision => 2), :class => 'order_shipping_price')
                  = " #{current_currency.html}"
                = order_shipping_form.hidden_field :price
              .street-input
                = order_shipping_form.label :track_number,t('track_number').capitalize
                = order_shipping_form.text_field :track_number
              .clear

    #right-sidebar.grid_4.omega
      .step.status.open
        - order_states_for_select = Order.aasm_states.collect{ |state| [t(state.name, :scope => [:order,:status]),state.name.to_s] }
        = f.select :aasm_current_state_with_event_firing, options_for_select(order_states_for_select, order.status)
        .clear
      .step
        = link_to t('order.product.add'), '#', :class => 'small-icons small-icons-verti-small-blue-plus add-order-detail'
        - unless order.new_record?
          -#= link_to t('order.invoice.show'), [:bill, :admin, order], :class => 'small-icons preview'
          = content_tag :span, t('order.invoice.show').capitalize, :class => 'small-icons preview disabled'
          = link_to t('order.destroy.action'), [:admin, order], :method => :delete, :confirm => t('order.destroy.confirm'), :class => 'small-icons delete'
      - unless order.new_record?
        .step.disabled
          %a.small-icons.step-title{ :href => "#" }
            = t('order.history').capitalize
    .clear
  = render :partial => 'products_popup', :locals => {:form => f}
= dataTables_tag :id => 'table-order-details', :columns => ["{ 'bSortable': false }", "{ 'sClass': 'product-name', 'sType': 'html'}", "", "{ 'sType': 'numeric'}", "", "{ 'sClass': 'total', 'sType': 'currency'}", "{ 'bSortable': false, 'sClass': 'actions' }"]

#empty_order_detail{:style => 'display: none;'}
  - id = "EMPTY_ID"
  = hidden_field_tag "order[order_details_attributes][#{id}][_destroy]", '', :class => 'delete'
  = hidden_field_tag "order[order_details_attributes][#{id}][product_id]"
  = hidden_field_tag "order[order_details_attributes][#{id}][name]"
  = hidden_field_tag "order[order_details_attributes][#{id}][price]"
  = hidden_field_tag "order[order_details_attributes][#{id}][sku]"
