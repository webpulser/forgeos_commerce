= display_standard_flashes
- content_for :tools, link_to(I18n.t('product.update.action').capitalize, [:admin ,product_detail.product_parent], :class => 'manage' ) if product_detail.product_parent
#tabs
  %ul
    %li
      %a{ :href => "#tabs-1" }
        = I18n.t('information', :count=>2).capitalize
    %li
      %a{ :href => "#tabs-2" }
        = I18n.t('picture', :count => 2).capitalize
  #tabs-1
    - form_for [:admin, product_detail], :html => { :id => 'static_attributes' } do |f|
      %p
        %b
          = f.label :deleted, I18n.t('deleted').capitalize
          \:
        = f.check_box :deleted
      %p
        %b
          = f.label :categories, I18n.t('category', :count => 2).capitalize
          \:
        #categories
          %ul
            = render :partial => 'admin/categories/list', :locals => { :categories => Category.find_all_by_parent_id(nil) }
        = hidden_field_tag 'product_parent[category_ids][]'
        = javascript_include_tag 'jstree/tree_component.min.js', 'jstree/css.js'
        = stylesheet_link_tag 'jstree/tree_component.css'
        - javascript_tag do
          $(function() {
          tree1 = $.tree_create(); tree1.init($('#categories'), {
          ui: { theme_path : '/stylesheets/jstree/themes/', theme_name : 'rails-commerce', context : [] },
          rules : { multiple : 'on' },
          callback : {
          onselect : function(NODE,TREE_OBJ) {
          if (TREE_OBJ.get_type(NODE) == 'folder') {
          $(NODE).children('ul').children().each( function(){TREE_OBJ.select_branch(this,true);})
          } else {
          cat_id = $(NODE).attr('id').replace('category_','');
          if ($('#cat_'+cat_id).size() == 0) { 
          $('#categories').after('<input id=\"cat_'+cat_id+'\" name=\"product_detail[category_ids][]\" type=\"hidden\" value=\"'+cat_id+'\" /> '); } } },
          ondeselect : function(NODE,TREE_OBJ) {
          if (TREE_OBJ.get_type(NODE) == 'folder') {
          $(NODE).children('ul').children().each( function(){TREE_OBJ.deselect_branch(this,true);})
          }
          cat_id = $(NODE).attr('id').replace('category_','');
          if ($('#cat_'+cat_id).size() != 0) { $('#cat_'+cat_id).remove(); }
          }},
          = "selected : ['#{product_detail.category_ids.collect{|cat| "category_#{cat}"}.join('\',\'')}']"
          });
          });
      %p
        %b
          = f.label :reference, I18n.t('reference').capitalize
          \:
        = f.text_field :reference
      %p
        %b
          = f.label :name, I18n.t('name').capitalize
          \:
        = f.text_field :name
      %p
        %b
          = f.label :description, I18n.t('description').capitalize
          \:
        = f.text_area :description
      %p
        %b
          = f.label :selling_date, I18n.t('selling_date').capitalize
          \:
        = f.date_select :selling_date, :include_blank => true
      %p
        %b
          = f.label :offer_month, I18n.t('offer_month').capitalize
          \:
        = f.check_box :offer_month
      %p
        %b
          = f.label :on_first_page, I18n.t('on_first_page').capitalize
          \:
        = f.check_box :on_first_page
      %p
        %b
          = f.label :stock, I18n.t('stock', :count => 1).capitalize
          \:
        = f.text_field :stock
      %p
        %b
          = f.label :price, I18n.t('price', :count => 1).capitalize
          \:
        = f.text_field :price
      %p
        %b
          = f.label :rate_tax, I18n.t('rate_tax').capitalize
          \:
        = f.text_field :rate_tax
      %p
        %b
          = f.label :weight, I18n.t('weight').capitalize
          \:
        = f.text_field :weight
      %p
        %b
          = f.label :keywords, I18n.t('keyword', :count => 2).capitalize
          \:
        = f.text_field :keywords
      - (product_detail.dynamic_tattributes + product_detail.product_parent.tattributes).each do |tattr|
        %p
          %b
            = label_tag tattr.name
            \:
          - unless tattr.dynamic?
            = select_tag "product_detail[tattribute_value_ids][]", options_from_collection_for_select(tattr.tattribute_values, :id, :name, (tattr.tattribute_value_ids & product_detail.tattribute_value_ids)), :multiple => true
          - else
            - dynamic_attribute = product_detail.dynamic_tattribute_values.find_by_tattribute_id(tattr.id)
            = text_field "dynamic_attribute_values[#{tattr.id}]", 'value', :value => (dynamic_attribute.value unless dynamic_attribute.nil?)
      %center
        = f.submit I18n.t('save').capitalize
  #tabs-2
    #product_pictures
      = link_to_unless product_detail.new_record?,I18n.t('picture.create.action').capitalize, new_admin_picture_path(:target => 'product', :target_id => product_detail.id), :class => 'add'
      #list_pictures
        = render :partial => 'admin/pictures/list', :locals => { :pictures => product_detail.pictures, :target => 'product', :target_id => product_detail.id }
= javascript_tag "$(function(){ $('#tabs').tabs(); })"
