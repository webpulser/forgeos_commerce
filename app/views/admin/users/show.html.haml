- order_states_for_select = Order.aasm_states.collect{ |state| [I18n.t(state.name, :scope => [:order,:status]),state.name.to_s] }
.backgrounds.big-header
  %h1
    =@user.fullname
  .interact-links
    = link_to I18n.t('user.update.action'), [:edit, :admin, @user], :class => 'backgrounds interact-button'
    = I18n.t(:or)
    %a.back-link{ :href => "#" }
      =link_to I18n.t('user.back'), admin_users_path, :class => 'back-link'
#content.grid_16.alpha.omega
  #customer-see.grid_12.alpha.omega
    .customer-header.backgrounds
      - if @user.orders.empty?
        = I18n.t(:order, :count => 0).capitalize
      - else
        %span.small-icons.order
          =@user.orders.all.sum(&:total)
          = $currency.html
        = "#{I18n.t('user.spent_on')} #{@user.orders.length}"
        = @user.orders.length > 1 ? I18n.t('order.other') : I18n.t('order.one')
    %table#table.datatable    
    = dataTables_tag :url => admin_orders_path(:filter => 'user', :user_id => @user.id, :skin => 'read_only', :format => :json), :columns => ["{'bSearchable':false, 'bSortable':false}","{'sTitle':'#{I18n.t(:id)}'}","{'sTitle':'#{I18n.t(:total)}'}","{'sTitle':'#{I18n.t(:product, :count => 1)}'}","{'sTitle':'#{I18n.t(:created_on)}'}","{'sTitle':'#{I18n.t(:customer, :count => 1)}','bVisible': false}","{'sTitle':'#{I18n.t(:status, :count => 1)}'}","{'sClass':'actions-td','bSearchable':false, 'bSortable':false}"]
    .padding-wrap
      .fieldset
        %h3
          = I18n.t('user.customer_infos').capitalize
        .main-infos
          .main-infos-cutomer
            %h4.small-icons
              = I18n.t('user.contact_infos').capitalize
            %p
              =@user.phone
            %p.customer-email
              =@user.email
          .main-info-separation.big-separation
          .order-delivery-adress
            %h4.small-icons
              = I18n.t('address.delivery', :count => 1).capitalize
            -@user.address_deliveries.each do |address_delivery|
              %p= address_delivery.address
              %p= address_delivery.address_2 if address_delivery.address_2
              %p
                = address_delivery.zip_code
                = address_delivery.city
              %p= address_delivery.country.name
              %br
              -if address_delivery == @user.address_deliveries.first and @user.address_deliveries.length > 1
                %h4
                  = I18n.t('address.delivery', :count => 2).capitalize
          .main-info-separation.big-separation
          .order-billing-adress
            %h4.small-icons
              = I18n.t('address.invoice', :count => 1).capitalize
            %p= @user.address_invoice.address
            %p= @user.address_invoice.address_2 if @user.address_invoice.address_2
            %p
              = @user.address_invoice.zip_code
              = @user.address_invoice.city
            %p= @user.address_invoice.country.name
        .clear
      
  #right-sidebar.grid_4.omega.alpha
    .step
      =mail_to @user.email, I18n.t('user.contact').capitalize, :class => 'small-icons contact'
      = link_to I18n.t('order.create.action').capitalize, new_admin_order_path, :class=>'small-icons duplicate'
      = link_to I18n.t('user.destroy.action').capitalize, [:admin, @user], :confirm => I18n.t('user.destroy.confirm').capitalize, :method => :delete, :class => 'small-icons delete'
    .step.open
      %a.small-icons.step-title.disable{ :href => '#' }
        = I18n.t('special_offer', :count => 2).capitalize
    .step.open.disable
      %a.small-icons.step-title{ :href => '#' }
        = I18n.t('newsletter', :count => 2).capitalize
    .step.open
      %a.small-icons.step-title{ :href => '#' }
        = I18n.t('user.history').capitalize
      .inner-step
        %p
          = I18n.t('created_on').capitalize
          =@user.created_at.to_date
          %br
          = I18n.t('by')
          =@user.fullname
  .clear
