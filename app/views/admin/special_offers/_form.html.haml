- form_tag({:action => 'create'}, :id => 'wrap') do
  .backgrounds.big-header
    = text_field 'rule_builder', 'name', :id => 'special_offer_title', :class => 'field_name'
    .interact-links
      = Forgeos_save_buttons [forgeos_commerce, :admin, :special_offers]


  #content.special_offers.grid_12.omega
    .inner-content
      = fields_for :rule_builder do |rule_builder|
        %label
          Description
        = rule_builder.text_area :description, :rows => 2
        .specialOfferFor
          .specialOffer_header
            %span.conditioner= t('special_offer.for').capitalize
            %div= rule_builder.select :for, @for,{}, :onchange => 'change_select_for(this)'
            %div= rule_builder.select :target, ProductCategory.all(:select=>'categories.id,name',:joins=>[:translations], :order => 'name').collect{|cat| [cat.name,cat.id]}
            .clear
          .specialOffers_bottom_arrow

        .specialOfferIf
          .specialOffer_header
            %span.conditioner= t('special_offer.if').capitalize
            %div= rule_builder.select :if, [[t(:all, :scope => [:special_offer,:_if]),'All'],[t(:any, :scope => [:special_offer,:_if]),'Any']]
            %span.conditioner= t('special_offer.this_condition')
            %div
              %select
                %option= t(:_true, :scope => [:special_offer,:_if])
            .clear

          #rule-conditions
            .condition
              %div= select_tag 'rule[targets][]', options_for_select(@product_attributes,{:disabled => @disable_attributes}),{ :onchange => "change_rule(this,'rule-condition')" }
              %div= select_tag 'rule[conds][]', options_for_select(@conditions)
              = text_field_tag 'rule[values][]'
              = link_to_function '', "add_rule('rule-condition')", :class => 'small-icons green-add-icon'
              = link_to_function '', "remove_rule(this,'rule-condition')", :class => 'small-icons red-delete-icon', :style => 'display : none'
              .clear
            .clear
          .specialOffers_bottom_arrow

      .specialOfferIf
        .specialOffer_header
          %span.conditioner= t('special_offer.then').capitalize
          .clear

        #action-conditions
          .condition
            %div= select_tag 'act[targets][]', options_for_select([[t(:discount,:scope=>[:special_offer,:action]),0]], 0)
            %div= select_tag 'act[conds][]', options_for_select(@discount_type)
            = text_field_tag 'act[values][]'
        .specialOffers_bottom_arrow

      //.specialOfferIf
      //  .specialOffer_header
      //    %span.conditioner
      //      = check_box_tag 'end_offer'
      //      = t('special_offer.end_offer_if')
      //    %span= select_tag 'end_offer_if', options_for_select([[t(:all, :scope => [:special_offer,:_if]),'All'],[t(:any, :scope => [:special_offer,:_if]),'Any']])
      //    %span.conditioner
      //      =t('special_offer.this_condition')
      //      =t(:_true, :scope => [:special_offer,:_if])
      //    .clear

      //  #end-conditions
      //    .condition
      //      %div= select_tag 'end[targets][]', options_for_select(@end)
      //      %div= select_tag 'end[conds][]', options_for_select(@conditions)
      //      = text_field_tag 'end[values][]'
      //      = link_to_function '', "add_rule('end-condition')", :class => 'small-icons green-add-icon'
      //      = link_to_function '', "remove_rule(this,'end-condition')", :class => 'small-icons red-delete-icon', :style => 'display : none'
      //      .clear


  #right-sidebar.grid_4.omega
    .step.status.open
      %div
        = select :rule_builder, :active, [[t('unpublished'), 0], [t('published'), 1]], :selected => 1
      .clear
    .step
      /%a.small-icons.duplicate{ :href => "#" }
      /  duplicate special offer
      /%a.small-icons.delete{ :href => "#" }
      /  delete special offer

  .clear
.no-customselect= render :partial => 'patterns'
