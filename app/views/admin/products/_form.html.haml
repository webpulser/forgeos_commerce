- form_for [:admin, product], :html => { :id => 'wrap' } do |f|
  .backgrounds.big-header
    = f.text_field :name
    .interact-links
      = fg_submit_tag(product.new_record? ? 'product.create.action' :'save_changes')
      = I18n.t('or')
      = link_to I18n.t('cancel').capitalize, admin_products_path, :class => 'back-link'

  #content.grid_16.alpha.omega
    #product.grid_12.alpha
      %h2.permalink
        = I18n.t('permalink').capitalize
        \:
        = "#{request.protocol}#{request.host}/product/"
        = f.text_field :url
      .grid_9.omega
        .grid_4.alpha.omega
          = label_tag :price, "#{I18n.t('price', :count => 1).capitalize}<sup class=\"required\">*</sup>"
          = f.text_field :price, :class => 'backgrounds grid_2 alpha omega', :id => 'price'
          %span.currency
            = $currency.html
        = f.label :product_type_id, "#{I18n.t('product_type', :count => 1).capitalize}<sup class=\"required\">*</sup>"
        %div
          = f.collection_select :product_type_id, ProductType.all, :id, :name, { :prompt => I18n.t('please_select') }
        .tool-tip-me
          .stock
            = f.label :stock, I18n.t('stock', :count => 1).capitalize
            = f.text_field(:stock, :size => 5)
          .stock
            = f.label :stop_sales, I18n.t('product.stop_sales').capitalize
            = f.check_box :stop_sales
              

        /.tool-tip-me
        /  .stock
        /    %label{ :for => "product-stock" }
        /      Stock
        /    %div
        /      %select#product-stock{ :name => "product-stock" }
        /        %option{ :selected => "selected", :value => "default" }
        /          Track low stock level
        /  #product-in-stock.tool-tip-content
        /    .content
        /      = f.label :stock, I18n.t('stock', :count => 1).capitalize
        /      = f.text_field(:stock, :class => 'background')
        /      %label{ :for => "out-stock-action" }
        /        if out of sotck
        /      %div
        /        %select
        /          %option{ :selected => "selected", :value => "0" }
        /            stop sales
        /      .clear
        /  .clear
        = f.label :sku, I18n.t('sku')
        %div
          = f.text_field :sku

      #product-images.grid_3.omega
        #featured-picture
          = I18n.t('media.picture.featured').capitalize
        = hidden_field_tag "#{f.object_name}[attachment_ids][]"
        %ul.sortable
          - product.pictures.each do |picture|
            %li{ :class => (picture.id == product.picture_ids.first) ? 'first-image' : ''}
              = link_to_function '', "$(this).parents('li').remove(); check_product_first_image() ", :title => I18n.t('media.picture.destroy.confirm').capitalize, :class => 'big-icons trash'
              = link_to '', [:edit, :admin, picture], :class => 'big-icons edit'
              = hidden_field_tag "#{f.object_name}[attachment_ids][]", picture.id, :id => "attachment_#{picture.id}"
              = image_tag picture.public_filename('')
              .handler
                .inner
          %li.clear
        = link_to content_tag(:span, I18n.t('media.picture.add').capitalize, :class=>'big-icons add-picture'), '#', :class=>'backgrounds button', :id => 'add-picture'
      .clear
      .grid_12.omega
        = f.label :description, I18n.t('description').capitalize
        %div{ :style => 'clear: left;'}
          = f.text_area :description, :cols => 80, :class => 'mceEditor'
      .option-panel.open
        .backgrounds.content-header
        = link_to I18n.t('attributes'), '#', :class => 'small-icons panel'
        #product-types-panel.option-panel-content
          = render :partial => 'attributes', :locals => { :product_type => product.product_type, :product => product }
          .clear
      .option-panel
        .backgrounds.content-header
        = link_to I18n.t('media.linked'), '#', :class => 'small-icons panel'
        .option-panel-content
          %a#add-file.backgrounds.button.right{ :href => "#" }
            %span.big-icons.add-media
              = I18n.t('add_file').capitalize
          #product-files.grid_9.sortable
            - product.attachments.all(:conditions => { :attachment_type_not => 'Picture'}).each do |attachment|
              = block_container f.object_name, 'attachment', attachment do
                = attachment.filename
                %span.file-size
                  = "- #{attachment.size} Ko"
          .clear
      .option-panel.disabled
        .backgrounds.content-header
        = link_to I18n.t('product.variant', :count => 2), '#', :class => 'small-icons panel'
        .option-panel-content
          %a.backgrounds.button.right{ :href => "#" }
            %span.small-icons.add-variant
              Create a variant
          .block-container
            %span.block-type
            %span.block-name
              %a.small-icons.panel{ :href => "#" }
                Domaine de Villemont 2008 37cl
            .variant
          .clear

      - if product.kind_of?(Pack)
        = render :partial => 'products_popup', :locals => { :form => f }

    #right-sidebar.grid_4.omega
      .step.status.open
        %div
          = f.select :active, [[I18n.t('unpublished'), 0], [I18n.t('published'), 1]], :selected => product.active ? 1 : 0
        .clear
        = f.check_box :on_first_page
        = I18n.t('show_on_homepage').capitalize
        %br
        /
          %input#limited-time-offer.check-me-it-appears{ :name => "limited-time-offer", :type => "checkbox" }
          Limited time offer
          .i-will-appear
            %span
              Stop after
              %input#limited-time-offer-end{ :name => "limited-time-offer-end", :type => "text" , :value => 'dd/mm/yyyy'}
          %br
          %input#limited-sales-offer.check-me-it-appears{ :name => "limited-sales-offer", :type => "checkbox" }
          Limited sales offer
          .i-will-appear
            %span
              Stop after
              %input#limited-sales-offer-end{ :name => "limited-sales-offer-end", :type => "text" }
              sales
      .step
        - unless product.new_record?
          = link_to I18n.t('product.duplicate').capitalize, [:duplicate, :admin, product], :class => 'small-icons duplicate'
          = link_to I18n.t('product.destroy.action').capitalize, [:admin, product], :confirm => I18n.t('product.destroy.confirm').capitalize, :method => :delete, :class => 'small-icons delete'
      .step.open
        = link_to(I18n.t('product.associated_collection', :count => 2), '#', :class => 'small-icons step-title')
        #association-product-tree.inner-step.init-tree
          = hidden_field_tag "#{f.object_name}[product_category_ids][]" 
          %ul
            = render :partial => 'admin/categories/associated_elements', :locals => { :association_id => 'product_category_ids', :element => product, :category_ids => product.product_category_ids, :categories => ProductCategory.find_all_by_parent_id(nil) }
          .clear
      .step.open
        = link_to I18n.t(:delivery), '#', :class => 'small-icons step-title'
        .inner-step.weight
          %label{ :for => "weight" }
            = I18n.t(:weight).capitalize
            %br
          = f.text_field :weight, :class => 'product_weight', :id => 'weight'
          KG
      .step.open
        = link_to I18n.t(:tag, :count => 2), '#', :class => 'small-icons step-title'
        .inner-step.tags
          .wrap_tags
            = hidden_field_tag 'tag_list[]', ''
            %input#tag.backgrounds{ :name => "tag", :type => "text", :title => I18n.t('tag_enter').capitalize, :class => 'defaultValue' }
            - product.tag_list.each do |tag|
              %span
                = tag
                = hidden_field_tag 'tag_list[]', tag
                = link_to '&nbsp;', '#', :class => 'big-icons gray-destroy'
          .clear
      .step.open
        = link_to I18n.t(:meta_description, :count => 2), '#', :class => 'small-icons step-title'
        .inner-step.meta
          - product.build_meta_info unless product.meta_info
          - f.fields_for :meta_info do |meta_info|
            %p
              %span
                = I18n.t('title').capitalize
                \:
              = meta_info.text_area :title, :class => 'text'
            %p
              %span
                = I18n.t('description').capitalize
                \:
              = meta_info.text_area :description, :class => 'text'
            %p
              %span
                = I18n.t('keyword', :count => 2).capitalize
                \:
              = meta_info.text_area :keywords, :class => 'text'
      .step.disabled
        = link_to I18n.t(:graphic_template, :count => 1), '#', :class => 'small-icons step-title'
        .inner-step.glossy
          %select{ :name => "design" }
            %option{ :selected => "selected", :value => "default" }
              Corporate blue design
            %option{ :value => "no" }
              Corporate green design
        .clear
    .clear
  = render :partial => 'attachments_popups', :locals => {:form => f}
