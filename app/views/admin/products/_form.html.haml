- form_for [:admin ,product], :html => { :id => 'wrap' } do |f|
  .backgrounds.big-header
    = f.text_field :name
    .interact-links
      = fg_submit_tag 'save_changes'
      = I18n.t('or')
      = link_to I18n.t('cancel').capitalize, admin_products_path, :class => 'back-link'
  #content.grid_12.alpha.omega
    #product
      .grid_9.omega
        .grid_4.alpha.omega
          %h2.permalink
            = I18n.t('permalink').capitalize
            \:
            = "#{request.protocol}#{request.host}/"
          = f.text_field :url
          = f.label :price, "#{I18n.t('price', :count => 1).capitalize}<sup class=\"required\">*</sup>"
          = f.text_field :price, :class => 'backgrounds grid_2 alpha omega', :id => 'price'
          %span.currency
            = $currency.html
        = f.label :product_type_id, "#{I18n.t('product_type', :count => 1).capitalize}<sup class=\"required\">*</sup>"
        %div
          = f.collection_select :product_type_id, ProductType.all, :id, :name, { :prompt => I18n.t('please_select') }
        /
          .tool-tip-me
            .stock
              %label{ :for => "product-stock" }
                Stock
              %div
                %select#product-stock{ :name => "product-stock" }
                  %option{ :selected => "selected", :value => "default" }
                    Track low stock level
            #product-in-stock.tool-tip-content
              .content
                %label{ :for => "in-stock" }
                  Products in stock
                %input#in-stock.backgrounds{ :name => "in-stock", :type => "text" }
                %label{ :for => "out-stock-action" }
                  if out of sotck
                %div
                  %select
                    %option{ :selected => "selected", :value => "0" }
                      stop sales
                .clear
            .clear
        %label{ :for => "stock" }
          = I18n.t('stock', :count => 1).capitalize
        = f.text_field 'stock', :class => 'background', :id => 'stock'
      #product-images.grid_3.omega
        #featured-picture
          = I18n.t('picture.featured').capitalize
        = hidden_field_tag 'product[attachment_ids][]'
        %ul.sortable
          - product.pictures.each do |picture|
            %li
              = link_to_function '', "$(this).parents('li').remove()", :title => I18n.t('picture.destroy.confirm').capitalize, :class => 'big-icons trash'
              = link_to '', [:edit, :admin, picture], :class => 'big-icons edit'
              = hidden_field_tag 'product[attachment_ids][]', picture.id
              = image_tag picture.public_filename('')
              .handler
                .inner
          %li.clear
        %a.backgrounds.button{ :href => "#" }
          %span.big-icons.add-picture
            = I18n.t('picture.add').capitalize
      .clear
      .grid_12.omega
        = f.label :description, I18n.t('description').capitalize
        %div{ :style => 'clear: left;'}
          = f.text_area :description, :cols => 80, :class => 'mceEditor'
      .option-panel
        .backgrounds.content-header
        %a.small-icons.panel{ :href => "#" }
          linked files
        .option-panel-content
          %a.backgrounds.button.right{ :href => "#" }
            %span.big-icons.add-file
              = I18n.t('add_file').capitalize
          .grid_9.sortable
            - product.attachments.all(:conditions => ['type != "Picture"']).each do |attachment|
              .block-container
                %span.block-type
                  %span.handler
                    %span.inner
                      &nbsp;
                  = attachment.type.to_s.upcase
                %span.block-name
                  = attachment.filename
                  %span.file-size
                    = "- #{attachment.size} Ko"
                %a.big-icons.gray-destroy{:href => '#'}
          .clear
      - if product.product_type
        .option-panel
          .backgrounds.content-header
          %a.small-icons.panel{ :href => "#" }
            = I18n.t('attributes')
          .option-panel-content
            - product.product_type.tattributes.each do |option|
              .fake-hr
                %span.option-second-title
                  = option.name
              - if option.dynamic?
                - dynamic_attribute = product.dynamic_tattribute_values.find_by_tattribute_id(option.id)
                = text_field "dynamic_tattribute_values[#{option.id}]", 'value', :value => (dynamic_attribute.value unless dynamic_attribute.nil?)
              - else
                -  option.tattribute_values.each do |value|
                  .grid_3.omega
                    = check_box_tag 'product[tattribute_value_ids][]', value.id, product.tattribute_value_ids.include?(value.id) 
                    = value.name
              .clear
      .option-panel.disabled
        .backgrounds.content-header
        %a.small-icons.panel{ :href => "#" }
          variants
        .option-panel-content
          %a.backgrounds.button.right{ :href => "#" }
            %span.small-icons.add-variant
              Create a variant
          .block-container
            %span.block-type
            %span.block-name
              %a.small-icons.panel{ :href => "#" }
                Domaine de Villemont 2008 37cl
            .variant
  #right-sidebar.grid_4.alpha.omega
    .step.status.open
      %div
        %select.unpublished{ :name => "status" }
          %option{ :selected => "selected", :value => "published" }
            published
          %option{ :value => "unpublished" }
            unpublished
      .clear
      = f.check_box :on_first_page
      = I18n.t('on_first_page').capitalize
      %br
      %input#limited-time-offer.check-me-it-appears{ :name => "limited-time-offer", :type => "checkbox" }
      Limited time offer
      .i-will-appear
        Stop after
        %input#limited-time-offer-end{ :name => "limited-time-offer-end", :type => "text" }
      %br
      %input#limited-sales-offer.check-me-it-appears{ :name => "limited-sales-offer", :type => "checkbox" }
      Limited sales offer
      .i-will-appear
        Stop after
        %input#limited-sales-offer-end{ :name => "limited-sales-offer-end", :type => "text" }
        sales
    .step
      - unless product.new_record?
        = link_to I18n.t('product.duplicate.action').capitalize, '#', :class => 'small-icons duplicate'
      = link_to I18n.t('product.destroy.action').capitalize, '#', :class => 'small-icons delete'
    .step.open
      %a.small-icons.step-title{ :href => "#" }
        Associated to collection
      #association-tree.inner-step
        %ul 
          = render :partial => 'admin/categories/associated_list', :locals => { :categories => ProductCategory.find_all_by_parent_id(nil) }
        .clear
    .step
      %a.small-icons.step-title{ :href => "#" }
        = I18n.t('delivery').capitalize
      .inner-step
        %label{ :for => "weight" }
          = I18n.t('weight').capitalize
          %br
        = f.text_field 'weight', :class => 'product_weight', :id => 'weight'
        KG
        %a.add_size.right{ :href => "#"}
          Add Size
    .step.open
      %a.small-icons.step-title{ :href => "#" }
        Tags
      .inner-step.tags
        %input#tag.backgrounds{ :name => "tag", :type => "text" }
        %span
          Tag name
          %a.big-icons.gray-destroy{ :href => "#" }
            \&nbsp;
        %span
          Tag name
          %a.big-icons.gray-destroy{ :href => "#" }
            \&nbsp;
        %span
          Tag name
          %a.big-icons.gray-destroy{ :href => "#" }
            \&nbsp;
        %span
          Tag name
          %a.big-icons.gray-destroy{ :href => "#" }
            \&nbsp;
    .step.open
      %a.small-icons.step-title{ :href => "#" }
        = I18n.t('meta_description').capitalize
      .inner-step.meta
        - product.build_meta_info unless product.meta_info
        - f.fields_for :meta_info do |meta_info|
          %p
            %span
              = I18n.t('title').capitalize
              \:
            = meta_info.text_area :title, :class => 'text'
          %p
            %span
              = I18n.t('description').capitalize
              \:
            = meta_info.text_area :description, :class => 'text'
          %p
            %span
              = I18n.t('keyword', :count => 2).capitalize
              \:
            = meta_info.text_area :keywords, :class => 'text'
    .step.disabled
      %a.small-icons.step-title{ :href => "#" }
        Graphic template
      .inner-step.glossy
        %select{ :name => "design" }
          %option{ :selected => "selected", :value => "default" }
            Corporate blue design
          %option{ :value => "no" }
            Corporate green design
      .clear
  .clear
