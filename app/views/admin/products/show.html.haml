= render :partial => 'admin/menus/lang_switcher'
= render :partial => 'tabs'
.backgrounds.big-header
  %h1= @product.name
  .interact-links
    = link_to t('product.update.action').capitalize, [:edit, :admin, @product], :class => 'backgrounds interact-button'
    = t('or')
    = link_to t('back_to_catalog').capitalize, admin_products_path, :class => 'back-link'

#content.grid_16.alpha.omega
  #product-see.grid_12.alpha
    .grid_8.omega
      - permalink = "#{request.protocol}#{request.host_with_port}/product/#{@product.url}"
      %h2.permalink
        = t('permalink', :count => 1).capitalize
        \:
        = link_to permalink, permalink
      .prices
        .normal-price= "#{@product.price} #{$currency.html}"
        .promo
          &nbsp;
        .stock
          = @product.stock
          &nbsp;
          = t('product.in_stock')
      .clear
      %p
        %em
          = t('product_type', :count => 1).capitalize
          \:
        = link_to @product.product_type.name, [:admin,@product.product_type], :class => 'product-type-link'
      %p
        %em
          = t :sku
          \:
        = @product.sku
      .description
        %em
          = t('description').capitalize
          \:
        = @product.description
    #product-images.grid_4.omega
      %ul
        - @product.pictures.each do |picture|
          - if picture == @product.pictures.first
            %li.first-image
              = image_tag picture.public_filename('')
              .featured= t('media.picture.featured')
          - else
            %li= image_tag picture.public_filename('')
        %li.clear
          &nbsp;
    .clear
    
    .option-panel.open
      .backgrounds.content-header
        &nbsp;
      %span.panel= t('media.linked', :count => 2)
      .option-panel-content
        .grid_9
          - @product.attachments.all(:conditions => '`attachments`.`type` != "Picture"').each do |attachment|
            .block-container
              %span.block-type= attachment.type.to_s.upcase
              %span.block-name
                = attachment.filename
                %span.file-size= "- #{attachment.size / 1024} Ko"
              - unless attachment == @product.attachments.last
                %hr.block-separator 
        .clear

    - if @product.is_a?(Pack)
      .option-panel.open
        .backgrounds.content-header
        &nbsp;
        %span.panel= t(:product, :count => 2)
        .option-panel-content
          .grid_9
            - @product.products.each do |product|
              .block-container
                %span.block-type= product.sku
                %span.block-name
                  = product.name
                  %span.file-size= " - #{product.price} #{$currency.html}"
                - unless product == @product.products.last
                  %hr.block-separator 
      .clear

    .option-panel.open
      .backgrounds.content-header
        &nbsp;
      %span.panel= t(:attributes)
      .option-panel-content
        - @product.product_type.product_attributes.each do |attribute|
          .fake-hr
            %span.option-second-title
              = attribute.name
          - value = @product.send(attribute.access_method)
          = value.is_a?(Array) ? value.join(', ') : value
          .clear
    .clear

  #right-sidebar.grid_4.omega
    .step.status.open
      %div
        - status = [[t('unpublished'), 'draft'], [t('published'), 'active']]
        = select_tag 'product[active]', options_for_select(status, @product.active ? 'active' : 'draft' )
        .clear
      - if @product.on_first_page
        = t('product.showed_on_homepage').capitalize

    .step
      = link_to t('product.duplicate').capitalize, duplicate_admin_product_path(@product), :class => 'small-icons duplicate'

    #products_show_associated_collection.step.open
      %a.small-icons.step-title{:href => '#'}= t('product.associated_collection', :count => 2).capitalize
      #association-tree.inner-step.init-tree
        Coming Soon

    #products_show_tags.step.open
      %a.small-icons.step-title{:href => '#'}= t('tag', :count => 2).capitalize
      .inner-step.tags
        - @product.tags.each do |tag|
          %span
            = tag.name
        .clear
    #products_show_meta.step.open
      %a.small-icons.step-title{ :href => '#' }
        = t('meta_description').capitalize
      .inner-step.meta
        %p
          %span
            = t('title').capitalize
            \:
          = @product.meta_info.title if @product.meta_info
        %p
          %span
            = t('description').capitalize
            \:
          = @product.meta_info.description if @product.meta_info
        %p
          %span
            = t('keyword', :count => 2).capitalize
            \:
          = @product.meta_info.keywords if @product.meta_info
  
    .step.disabled
      %a.small-icons.step-title{ :href => "#" }
        Graphic template
      .inner-step.glossy
        %select{ :name => "design" }
          %option{ :selected => "selected", :value => "default" }
            Corporate blue design
          %option{ :value => "no" }
            Corporate green design
      .clear
  .clear
